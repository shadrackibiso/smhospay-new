[{"C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\index.js":"1","C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\serviceWorker.js":"2","C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\App.js":"3","C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\config\\config.jsx":"4","C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\components\\SplashScreen.jsx":"5","C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\routes\\AppRouter.jsx":"6","C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\routes\\pay.jsx":"7","C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\routes\\Login.jsx":"8","C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\routes\\Dashboard.jsx":"9","C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\routes\\AuthRoute.jsx":"10","C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\routes\\Signup.jsx":"11","C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\components\\Sidebar.jsx":"12","C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\components\\PayForm.jsx":"13","C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\components\\Header.jsx":"14","C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\components\\PayModal.jsx":"15","C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\components\\ProfileModal.jsx":"16","C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\components\\PaymentStats.jsx":"17","C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\components\\HeaderInner.jsx":"18","C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\routes\\AdminDashboard.jsx":"19","C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\components\\MobileNav.jsx":"20","C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\routes\\Payments.jsx":"21","C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\routes\\Payment.jsx":"22","C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\components\\PaymentPanel.jsx":"23","C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\components\\RecentPayments.jsx":"24"},{"size":524,"mtime":1622595473473,"results":"25","hashOfConfig":"26"},{"size":5086,"mtime":499162500000,"results":"27","hashOfConfig":"26"},{"size":5056,"mtime":1622720355203,"results":"28","hashOfConfig":"26"},{"size":654,"mtime":1622720029770,"results":"29","hashOfConfig":"26"},{"size":258,"mtime":1622115798950,"results":"30","hashOfConfig":"26"},{"size":1353,"mtime":1622590530302,"results":"31","hashOfConfig":"26"},{"size":1258,"mtime":1622589635368,"results":"32","hashOfConfig":"26"},{"size":3175,"mtime":1622720616793,"results":"33","hashOfConfig":"26"},{"size":2457,"mtime":1622590853228,"results":"34","hashOfConfig":"26"},{"size":403,"mtime":1622379988184,"results":"35","hashOfConfig":"26"},{"size":5923,"mtime":1622720604794,"results":"36","hashOfConfig":"26"},{"size":1334,"mtime":1622591134878,"results":"37","hashOfConfig":"26"},{"size":3004,"mtime":1622720647052,"results":"38","hashOfConfig":"26"},{"size":1142,"mtime":1622453912069,"results":"39","hashOfConfig":"26"},{"size":2171,"mtime":1614607074000,"results":"40","hashOfConfig":"26"},{"size":1456,"mtime":1622720611009,"results":"41","hashOfConfig":"26"},{"size":3681,"mtime":1622592175156,"results":"42","hashOfConfig":"26"},{"size":1259,"mtime":1622468773679,"results":"43","hashOfConfig":"26"},{"size":2361,"mtime":1622590889758,"results":"44","hashOfConfig":"26"},{"size":1097,"mtime":1622591127864,"results":"45","hashOfConfig":"26"},{"size":10401,"mtime":1622591006125,"results":"46","hashOfConfig":"26"},{"size":5094,"mtime":1622720669298,"results":"47","hashOfConfig":"26"},{"size":4757,"mtime":1622591076562,"results":"48","hashOfConfig":"26"},{"size":6227,"mtime":1622594014445,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1pahxp7",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"52"},"C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\index.js",[],["105","106"],"C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\serviceWorker.js",[],"C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\App.js",[],"C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\config\\config.jsx",[],"C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\components\\SplashScreen.jsx",["107"],"import React from \"react\";\r\nimport Icon from \"../images/icon.png\"\r\nimport \"../css/splashScreen.css\";\r\n\r\nfunction SplashScreen() {\r\n  return (\r\n    <div className=\"splashScreen\">\r\n      <img src={Icon} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SplashScreen;\r\n",["108","109"],"C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\routes\\AppRouter.jsx",[],"C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\routes\\pay.jsx",[],"C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\routes\\Login.jsx",["110"],"C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\routes\\Dashboard.jsx",[],"C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\routes\\AuthRoute.jsx",[],"C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\routes\\Signup.jsx",[],"C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\components\\Sidebar.jsx",["111","112"],"import React, { useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { MdReceipt, MdDashboard } from \"react-icons/md\";\r\nimport logo from \"../images/logo.svg\";\r\n\r\nfunction Sidebar(props) {\r\n  //   const [redirect, setRedirect] = useState(false);\r\n\r\n  return (\r\n    <div className=\"sidebar d-none d-lg-block\">\r\n      <div className=\"sidebarHeader\">\r\n        <img src={logo} width=\"120px\" />\r\n      </div>\r\n      <div className=\"fullHeight sidebarNavContainer\">\r\n        {/* HOME */}\r\n        <NavLink to=\"/\">\r\n          <div\r\n            className={\r\n              props.page === \"home\" ? \"sidebarNav active\" : \"sidebarNav\"\r\n            }\r\n          >\r\n            <div className=\"sidebarNavIcon\">\r\n              <MdDashboard />\r\n            </div>\r\n            <div className=\"sidebarNavText\">Dashboard</div>\r\n          </div>\r\n        </NavLink>\r\n        {/* PAYMENTS */}\r\n        <NavLink to=\"/payments\">\r\n          <div\r\n            className={\r\n              props.page === \"payments\" ? \"sidebarNav active\" : \"sidebarNav\"\r\n            }\r\n          >\r\n            <div className=\"sidebarNavIcon\">\r\n              <MdReceipt />\r\n            </div>\r\n            <div className=\"sidebarNavText\">payments</div>\r\n          </div>\r\n        </NavLink>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\components\\PayForm.jsx",[],"C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\components\\Header.jsx",[],"C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\components\\PayModal.jsx",[],["113","114"],"C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\components\\ProfileModal.jsx",[],"C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\components\\PaymentStats.jsx",[],"C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\components\\HeaderInner.jsx",[],"C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\routes\\AdminDashboard.jsx",[],"C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\components\\MobileNav.jsx",[],"C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\routes\\Payments.jsx",["115"],"import React, { useState } from \"react\";\r\nimport \"../css/home.css\";\r\nimport Header from \"../components/Header\";\r\nimport empty from \"../images/empty.svg\";\r\nimport { FaHandHoldingUsd } from \"react-icons/fa\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport MobileNav from \"../components/MobileNav\";\r\nimport moment from \"moment\";\r\nimport numeral from \"numeral\";\r\nimport { CircleSpinner } from \"react-spinners-kit\";\r\nimport { ClassicSpinner } from \"react-spinners-kit\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PaymentPanel from \"../components/PaymentPanel\";\r\n\r\nfunction Payments(props) {\r\n  const [displayPaymentPanel, setDisplayPaymentPanel] = useState(false);\r\n  const [selectedPayment, setSelectedPayment] = useState(null);\r\n\r\n  const showPayment = (props) => {\r\n    setSelectedPayment(props);\r\n    setDisplayPaymentPanel(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"pageContainer\">\r\n        {/* SIDEBAR */}\r\n        <Sidebar page=\"payments\" />\r\n        {/* PAGE LOADER */}\r\n        <div\r\n          className=\"loaderContainer contentWrap\"\r\n          style={{\r\n            display: !props.loading && \"none\",\r\n          }}\r\n        >\r\n          {<CircleSpinner size={30} color=\"#007cb7\" loading={props.loading} />}\r\n        </div>\r\n        {/* MAIN CONTENT */}\r\n        <div\r\n          className=\"contentWrap\"\r\n          style={{\r\n            display: props.loading && \"none\",\r\n          }}\r\n        >\r\n          {/* HEADER */}\r\n          <Header title={\"Payment History\"} {...props} />\r\n          {/* CONTENT BODY */}\r\n          <div className=\"fullHeight\">\r\n            <div className=\"container px-0\">\r\n              {/* LOADER */}\r\n              <div\r\n                className=\"loaderContainer mt-5\"\r\n                style={{\r\n                  display: props.givings && \"none\",\r\n                }}\r\n              >\r\n                {\r\n                  <ClassicSpinner\r\n                    size={30}\r\n                    color=\"#dddddd\"\r\n                    loading={!props.givings}\r\n                  />\r\n                }\r\n              </div>\r\n              <div\r\n                className=\"row\"\r\n                style={{\r\n                  display: !props.givings && \"none\",\r\n                }}\r\n              >\r\n                {/* RECENT PaymentS DESKTOP */}\r\n                <div\r\n                  className=\"col-12\"\r\n                  style={{\r\n                    display: !props.givings && \"none\",\r\n                  }}\r\n                >\r\n                  <div className=\"transHistoryContainer d-none d-md-block\">\r\n                    {/* Payment TABLE HEAD */}\r\n                    <div className=\"transHistoryCard transHistoryHeader d-flex align-items-center\">\r\n                      <div className=\"col-md-1 p-0\">\r\n                        {/* <div className=\"transHistoryCardIcon totalIcon\">\r\n                          <FaHandHoldingUsd />\r\n                        </div> */}\r\n                      </div>\r\n                      <div className=\"col-md-3 p-0\">Amount</div>\r\n                      <div className=\"col-md-2 p-0\">Payment Type</div>\r\n                      <div className=\"col-md-3 p-0\">Date</div>\r\n                      <div className=\"col-md-3 p-0\">\r\n                        {props.accountType &&\r\n                        props.accountType.toLowerCase() === \"admin\"\r\n                          ? \"Tithe Number\"\r\n                          : \"Note\"}\r\n                      </div>\r\n                    </div>\r\n                    {/* PaymentS LOOP */}\r\n                    {props.givings &&\r\n                      props.givings\r\n                        .sort((a, b) => (a.date > b.date ? -1 : 1))\r\n                        .map((giving) => (\r\n                          <div\r\n                            className=\"transHistoryCard d-flex align-items-center\"\r\n                            key={giving.id}\r\n                            onClick={() =>\r\n                              showPayment({\r\n                                ...giving,\r\n                                date: giving.date.toDate(),\r\n                              })\r\n                            }\r\n                          >\r\n                            <div className=\"col-2 col-md-1 p-0\">\r\n                              <div\r\n                                className={\r\n                                  (giving.type === \"tithe\" &&\r\n                                    \"transHistoryCardIcon titheIcon\") ||\r\n                                  (giving.type === \"offering\" &&\r\n                                    \"transHistoryCardIcon offeringIcon\") ||\r\n                                  (giving.type !== (\"tithe\" && \"offering\") &&\r\n                                    \"transHistoryCardIcon seedIcon\")\r\n                                }\r\n                              >\r\n                                <FaHandHoldingUsd />\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"col-7 col-md-3 p-0\">\r\n                              <div className=\"transHistoryAmount\">\r\n                                ₦{numeral(giving.amount).format(\"0,0\")}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"col-md-2 p-0 transHistoryText-n text-capitalize\">\r\n                              {giving.type}\r\n                            </div>\r\n                            <div className=\"col-md-3 p-0 transHistoryText-n\">\r\n                              {moment(giving.date.toDate()).format(\"LLLL\")}\r\n                            </div>\r\n                            <div\r\n                              className=\"col-md-3 p-0 transHistoryText-n\"\r\n                              style={{\r\n                                display:\r\n                                  props.accountType.toLowerCase() !== \"admin\"\r\n                                    ? \"block\"\r\n                                    : \"none\",\r\n                              }}\r\n                            >\r\n                              {giving.note ? giving.note : \"-\"}\r\n                            </div>\r\n                            <div\r\n                              className=\"col-md-3 p-0 transHistoryText-n\"\r\n                              style={{\r\n                                display:\r\n                                  props.accountType.toLowerCase() === \"admin\"\r\n                                    ? \"block\"\r\n                                    : \"none\",\r\n                              }}\r\n                            >\r\n                              {giving.titheNumber}\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                  </div>\r\n                </div>\r\n                {/* empty illustration */}\r\n                <div\r\n                  className=\"flex-column align-items-center justify-content-center mt-5\"\r\n                  style={{\r\n                    display:\r\n                      props.givings && props.givings.length > 0\r\n                        ? \"none\"\r\n                        : \"flex\",\r\n                  }}\r\n                >\r\n                  <img src={empty} width=\"40%\" />\r\n                  <span className=\"mt-3\">\r\n                    <i>no payments yet</i>\r\n                  </span>\r\n                </div>\r\n                {/* PAYMENT MOBILE */}\r\n                <div\r\n                  className=\"col-12\"\r\n                  style={{\r\n                    display: !props.givings && \"none\",\r\n                  }}\r\n                >\r\n                  <div className=\"transHistoryContainer d-md-none\">\r\n                    {props.givings &&\r\n                      props.givings\r\n                        .sort((a, b) => (a.date > b.date ? -1 : 1))\r\n                        .map((giving) => (\r\n                          <Link\r\n                            to={{\r\n                              pathname: `/payment/${giving.id}`,\r\n                              state: {\r\n                                ...giving,\r\n                                date: giving.date.toDate(),\r\n                                accountType: props.accountType.toLowerCase(),\r\n                              },\r\n                            }}\r\n                            key={giving.id}\r\n                            className=\"rowLink transHistoryCard d-flex align-items-center\"\r\n                          >\r\n                            <div className=\"col-2 col-md-1 mr-md-4 p-0\">\r\n                              <div\r\n                                className={\r\n                                  (giving.type === \"tithe\" &&\r\n                                    \"transHistoryCardIcon titheIcon\") ||\r\n                                  (giving.type === \"offering\" &&\r\n                                    \"transHistoryCardIcon offeringIcon\") ||\r\n                                  (giving.type !== (\"tithe\" && \"offering\") &&\r\n                                    \"transHistoryCardIcon seedIcon\")\r\n                                }\r\n                              >\r\n                                <FaHandHoldingUsd />\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"col-7 col-md-6 p-0\">\r\n                              <div className=\"transHistoryAmount\">\r\n                                ₦{numeral(giving.amount).format(\"0,0\")}\r\n                              </div>\r\n                              <div className=\"transHistoryText\">\r\n                                {moment(giving.date.toDate()).format(\"LL\")}\r\n                              </div>\r\n                            </div>\r\n                            <div className=\"col-3 col-md-4 p-0 text-right transHistoryText\">\r\n                              {giving.type}\r\n                            </div>\r\n                          </Link>\r\n                        ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          {/* MOBILE NAV */}\r\n          <MobileNav page=\"Payments\" />\r\n        </div>\r\n      </div>\r\n      <PaymentPanel\r\n        selectedPayment={selectedPayment}\r\n        openPanel={displayPaymentPanel}\r\n        closePanel={() => setDisplayPaymentPanel(false)}\r\n        state={{\r\n          accountType: props.accountType && props.accountType.toLowerCase(),\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Payments;\r\n","C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\routes\\Payment.jsx",[],"C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\components\\PaymentPanel.jsx",[],"C:\\Users\\Shadrack\\Desktop\\React\\smhospay\\src\\components\\RecentPayments.jsx",["116"],"import React, { useState } from \"react\";\r\nimport \"../css/home.css\";\r\nimport { FaHandHoldingUsd } from \"react-icons/fa\";\r\nimport numeral from \"numeral\";\r\nimport moment from \"moment\";\r\nimport empty from \"../images/empty.svg\";\r\nimport { ClassicSpinner } from \"react-spinners-kit\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PaymentPanel from \"./PaymentPanel\";\r\n\r\nfunction RecentPayments(props) {\r\n  const [displayPaymentPanel, setDisplayPaymentPanel] = useState(false);\r\n  const [selectedPayment, setSelectedPayment] = useState(null);\r\n\r\n  const showPayment = (props) => {\r\n    setSelectedPayment(props);\r\n    setDisplayPaymentPanel(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"row justify-content-between no-gutters align-items-center\">\r\n        <h5 className=\"font-weight-bold panelTitle\">Recent Payments</h5>\r\n        {/* LOADER */}\r\n        <div\r\n          className=\"loaderContainer mt-5\"\r\n          style={{\r\n            display: props.givings && \"none\",\r\n          }}\r\n        >\r\n          {\r\n            <ClassicSpinner\r\n              size={30}\r\n              color=\"#dddddd\"\r\n              loading={!props.givings}\r\n            />\r\n          }\r\n        </div>\r\n      </div>\r\n      {/* PaymentS CONTENT */}\r\n      <div\r\n        style={{\r\n          display: !props.givings && \"none\",\r\n        }}\r\n      >\r\n        {/* RECENT PaymentS DESKTOP */}\r\n        <div\r\n          className={\r\n            props.givings && props.givings.length > 0\r\n              ? \"d-none d-md-block transHistoryContainer mt-md-4\"\r\n              : \"d-none\"\r\n          }\r\n        >\r\n          {props.givings &&\r\n            props.givings\r\n              .sort((a, b) => (a.date > b.date ? -1 : 1))\r\n              .slice(0, 4)\r\n              .map((giving) => (\r\n                <div\r\n                  className=\"transHistoryCard d-flex align-items-center\"\r\n                  key={giving.id}\r\n                  onClick={() =>\r\n                    showPayment({\r\n                      ...giving,\r\n                      date: giving.date.toDate(),\r\n                    })\r\n                  }\r\n                >\r\n                  <div className=\"col-2 col-md-1 mr-md-4 p-0\">\r\n                    <div\r\n                      className={\r\n                        (giving.type === \"tithe\" &&\r\n                          \"transHistoryCardIcon titheIcon\") ||\r\n                        (giving.type === \"offering\" &&\r\n                          \"transHistoryCardIcon offeringIcon\") ||\r\n                        (giving.type !== (\"tithe\" && \"offering\") &&\r\n                          \"transHistoryCardIcon seedIcon\")\r\n                      }\r\n                    >\r\n                      <FaHandHoldingUsd />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-7 col-md-6 p-0\">\r\n                    <div className=\"transHistoryAmount\">\r\n                      ₦{numeral(giving.amount).format(\"0,0\")}\r\n                    </div>\r\n                    <div className=\"transHistoryText\">\r\n                      {moment(giving.date.toDate()).format(\"LL\")}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-3 col-md-4 p-0 text-right transHistoryText\">\r\n                    {giving.type}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n        </div>\r\n        {/* RECENT PAYMENTS MOBILE */}\r\n        <div\r\n          className={\r\n            props.givings && props.givings.length > 0\r\n              ? \"d-block d-md-none transHistoryContainer mt-2\"\r\n              : \"d-none\"\r\n          }\r\n        >\r\n          {props.givings &&\r\n            props.givings\r\n              .sort((a, b) => (a.date > b.date ? -1 : 1))\r\n              .slice(0, 7)\r\n              .map((giving) => (\r\n                <Link\r\n                  to={{\r\n                    pathname: `/Payment/${giving.id}`,\r\n                    state: {\r\n                      ...giving,\r\n                      date: giving.date.toDate(),\r\n                      accountType: props.accountType.toLowerCase(),\r\n                    },\r\n                  }}\r\n                  key={giving.id}\r\n                  className=\"rowLink transHistoryCard d-flex align-items-center\"\r\n                >\r\n                  <div className=\"col-2 col-md-1 mr-md-4 p-0\">\r\n                    <div\r\n                      className={\r\n                        (giving.type === \"tithe\" &&\r\n                          \"transHistoryCardIcon titheIcon\") ||\r\n                        (giving.type === \"offering\" &&\r\n                          \"transHistoryCardIcon offeringIcon\") ||\r\n                        (giving.type !== (\"tithe\" && \"offering\") &&\r\n                          \"transHistoryCardIcon seedIcon\")\r\n                      }\r\n                    >\r\n                      <FaHandHoldingUsd />\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-7 col-md-6 p-0\">\r\n                    <div className=\"transHistoryAmount\">\r\n                      ₦{numeral(giving.amount).format(\"0,0\")}\r\n                    </div>\r\n                    <div className=\"transHistoryText\">\r\n                      {moment(giving.date.toDate()).format(\"LL\")}\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-3 col-md-4 p-0 text-right transHistoryText\">\r\n                    {giving.type}\r\n                  </div>\r\n                </Link>\r\n              ))}\r\n        </div>\r\n        {/* empty illustration */}\r\n        <div\r\n          className=\"flex-column align-items-center justify-content-center mt-4\"\r\n          style={{\r\n            display:\r\n              props.givings && props.givings.length > 0 ? \"none\" : \"flex\",\r\n          }}\r\n        >\r\n          <img src={empty} width=\"70%\" />\r\n          <span className=\"mt-3\">\r\n            <i>no Payments yet</i>\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <PaymentPanel\r\n        selectedPayment={selectedPayment}\r\n        openPanel={displayPaymentPanel}\r\n        closePanel={() => setDisplayPaymentPanel(false)}\r\n        state={{\r\n          accountType: props.accountType && props.accountType.toLowerCase(),\r\n        }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RecentPayments;\r\n",{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":8,"column":7,"nodeType":"123","endLine":8,"endColumn":25},{"ruleId":"117","replacedBy":"124"},{"ruleId":"119","replacedBy":"125"},{"ruleId":"121","severity":1,"message":"122","line":45,"column":17,"nodeType":"123","endLine":45,"endColumn":66},{"ruleId":"126","severity":1,"message":"127","line":1,"column":17,"nodeType":"128","messageId":"129","endLine":1,"endColumn":25},{"ruleId":"121","severity":1,"message":"122","line":12,"column":9,"nodeType":"123","endLine":12,"endColumn":41},{"ruleId":"117","replacedBy":"130"},{"ruleId":"119","replacedBy":"131"},{"ruleId":"121","severity":1,"message":"122","line":172,"column":19,"nodeType":"123","endLine":172,"endColumn":50},{"ruleId":"121","severity":1,"message":"122","line":158,"column":11,"nodeType":"123","endLine":158,"endColumn":42},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["132"],["133"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["132"],["133"],"no-global-assign","no-unsafe-negation"]